{
  "openapi": "3.0.0",
  "info": {
    "title": "Network Anomaly Detection API",
    "description": "This API detects anomalies in telecom network patterns that may indicate AI-driven impersonation attempts or other security threats.",
    "version": "1.0.0",
    "contact": {
      "name": "Telecom Network APIs Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "https://api.telecom-network.example.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://sandbox.telecom-network.example.com/v1",
      "description": "Sandbox server for testing"
    }
  ],
  "tags": [
    {
      "name": "anomalies",
      "description": "Anomaly detection operations"
    },
    {
      "name": "monitoring",
      "description": "Network monitoring operations"
    },
    {
      "name": "alerts",
      "description": "Alert management operations"
    }
  ],
  "paths": {
    "/anomalies/detect": {
      "post": {
        "tags": ["anomalies"],
        "summary": "Detect network anomalies",
        "description": "Analyzes telecom network patterns to detect anomalies that may indicate security threats.",
        "operationId": "detectAnomalies",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnomalyDetectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Anomaly detection completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyDetectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/anomalies/list": {
      "get": {
        "tags": ["anomalies"],
        "summary": "List detected anomalies",
        "description": "Lists anomalies detected for a specific phone number or network segment.",
        "operationId": "listAnomalies",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Phone number in E.164 format (required if networkSegment not provided)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "networkSegment",
            "in": "query",
            "description": "Network segment identifier (required if phoneNumber not provided)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consentToken",
            "in": "query",
            "description": "Token representing user consent for accessing anomaly data",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time for the anomaly query (ISO 8601 format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time for the anomaly query (ISO 8601 format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Minimum severity level of anomalies to include",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["low", "medium", "high", "critical"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter anomalies by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["new", "acknowledged", "investigating", "resolved", "false_positive"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of anomalies to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anomalies retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomaliesListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/anomalies/{anomalyId}": {
      "get": {
        "tags": ["anomalies"],
        "summary": "Get anomaly details",
        "description": "Retrieves detailed information about a specific anomaly.",
        "operationId": "getAnomalyDetails",
        "parameters": [
          {
            "name": "anomalyId",
            "in": "path",
            "description": "ID of the anomaly",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anomaly details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Anomaly not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": ["anomalies"],
        "summary": "Update anomaly status",
        "description": "Updates the status of a specific anomaly.",
        "operationId": "updateAnomalyStatus",
        "parameters": [
          {
            "name": "anomalyId",
            "in": "path",
            "description": "ID of the anomaly",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnomalyStatusUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Anomaly status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Anomaly not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/monitoring/configure": {
      "post": {
        "tags": ["monitoring"],
        "summary": "Configure network monitoring",
        "description": "Configures monitoring parameters for anomaly detection.",
        "operationId": "configureMonitoring",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitoringConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Monitoring configured successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/monitoring/status": {
      "get": {
        "tags": ["monitoring"],
        "summary": "Get monitoring status",
        "description": "Retrieves the current status of network monitoring.",
        "operationId": "getMonitoringStatus",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Phone number in E.164 format (required if networkSegment not provided)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "networkSegment",
            "in": "query",
            "description": "Network segment identifier (required if phoneNumber not provided)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consentToken",
            "in": "query",
            "description": "Token representing user consent for accessing monitoring data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitoring status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/alerts/configure": {
      "post": {
        "tags": ["alerts"],
        "summary": "Configure alert settings",
        "description": "Configures alert settings for anomaly notifications.",
        "operationId": "configureAlerts",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert settings configured successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/alerts/history": {
      "get": {
        "tags": ["alerts"],
        "summary": "Get alert history",
        "description": "Retrieves the history of alerts for a specific phone number or network segment.",
        "operationId": "getAlertHistory",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Phone number in E.164 format (required if networkSegment not provided)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "networkSegment",
            "in": "query",
            "description": "Network segment identifier (required if phoneNumber not provided)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consentToken",
            "in": "query",
            "description": "Token representing user consent for accessing alert data",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time for the alert history query (ISO 8601 format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time for the alert history query (ISO 8601 format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Minimum severity level of alerts to include",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["low", "medium", "high", "critical"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of alerts to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AnomalyDetectionRequest": {
        "type": "object",
        "oneOf": [
          {
            "required": ["phoneNumber", "consentToken"]
          },
          {
            "required": ["networkSegment", "consentToken"]
          }
        ],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier",
            "example": "segment-123456"
          },
          "consentToken": {
            "type": "string",
            "description": "Token representing user consent for anomaly detection",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "analysisWindow": {
            "type": "integer",
            "description": "Time window in hours to analyze (1-168)",
            "minimum": 1,
            "maximum": 168,
            "default": 24,
            "example": 24
          },
          "anomalyTypes": {
            "type": "array",
            "description": "Types of anomalies to detect",
            "items": {
              "type": "string",
              "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device", "all"]
            },
            "default": ["all"],
            "example": ["call_pattern", "message_pattern", "location"]
          },
          "sensitivityLevel": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "description": "Sensitivity level for anomaly detection",
            "default": "medium",
            "example": "medium"
          },
          "includeDetails": {
            "type": "boolean",
            "description": "Whether to include detailed analysis in the response",
            "default": false,
            "example": true
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to receive anomaly detection results",
            "example": "https://example.com/callbacks/anomaly-detection"
          }
        }
      },
      "AnomalyDetectionResponse": {
        "type": "object",
        "required": ["detectionId", "anomaliesDetected", "detectionTimestamp"],
        "properties": {
          "detectionId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the detection request",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "anomaliesDetected": {
            "type": "boolean",
            "description": "Whether any anomalies were detected",
            "example": true
          },
          "detectionTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the detection was performed",
            "example": "2025-04-20T16:30:00Z"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (if provided in request)",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier (if provided in request)",
            "example": "segment-123456"
          },
          "analysisWindow": {
            "type": "integer",
            "description": "Time window in hours that was analyzed",
            "example": 24
          },
          "anomalySummary": {
            "type": "object",
            "description": "Summary of detected anomalies",
            "properties": {
              "totalCount": {
                "type": "integer",
                "description": "Total number of anomalies detected",
                "example": 3
              },
              "severityCounts": {
                "type": "object",
                "description": "Count of anomalies by severity",
                "properties": {
                  "low": {
                    "type": "integer",
                    "description": "Count of low severity anomalies",
                    "example": 1
                  },
                  "medium": {
                    "type": "integer",
                    "description": "Count of medium severity anomalies",
                    "example": 2
                  },
                  "high": {
                    "type": "integer",
                    "description": "Count of high severity anomalies",
                    "example": 0
                  },
                  "critical": {
                    "type": "integer",
                    "description": "Count of critical severity anomalies",
                    "example": 0
                  }
                }
              },
              "typeCounts": {
                "type": "object",
                "description": "Count of anomalies by type",
                "properties": {
                  "call_pattern": {
                    "type": "integer",
                    "description": "Count of call pattern anomalies",
                    "example": 1
                  },
                  "message_pattern": {
                    "type": "integer",
                    "description": "Count of message pattern anomalies",
                    "example": 0
                  },
                  "data_usage": {
                    "type": "integer",
                    "description": "Count of data usage anomalies",
                    "example": 0
                  },
                  "location": {
                    "type": "integer",
                    "description": "Count of location anomalies",
                    "example": 2
                  },
                  "device": {
                    "type": "integer",
                    "description": "Count of device anomalies",
                    "example": 0
                  }
                }
              }
            }
          },
          "anomalies": {
            "type": "array",
            "description": "List of detected anomalies",
            "items": {
              "type": "object",
              "properties": {
                "anomalyId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the anomaly",
                  "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "type": {
                  "type": "string",
                  "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"],
                  "description": "Type of anomaly",
                  "example": "location"
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Severity of the anomaly",
                  "example": "medium"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the anomaly",
                  "example": "Unusual location activity detected outside typical travel patterns"
                },
                "detectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the anomaly was detected",
                  "example": "2025-04-20T15:45:00Z"
                },
                "confidenceScore": {
                  "type": "number",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 1,
                  "description": "Confidence score for the anomaly detection (0-1)",
                  "example": 0.85
                }
              }
            }
          },
          "detailedAnalysis": {
            "type": "object",
            "description": "Detailed analysis of network patterns",
            "properties": {
              "callPatternAnalysis": {
                "type": "object",
                "description": "Analysis of call patterns",
                "properties": {
                  "totalCalls": {
                    "type": "integer",
                    "description": "Total number of calls in the analysis window",
                    "example": 25
                  },
                  "unusualCallVolume": {
                    "type": "boolean",
                    "description": "Whether call volume is unusual",
                    "example": true
                  },
                  "unusualCallTimes": {
                    "type": "boolean",
                    "description": "Whether calls were made at unusual times",
                    "example": false
                  },
                  "unusualCallDurations": {
                    "type": "boolean",
                    "description": "Whether calls had unusual durations",
                    "example": false
                  },
                  "unusualCallRecipients": {
                    "type": "boolean",
                    "description": "Whether calls were made to unusual recipients",
                    "example": true
                  }
                }
              },
              "messagePatternAnalysis": {
                "type": "object",
                "description": "Analysis of message patterns",
                "properties": {
                  "totalMessages": {
                    "type": "integer",
                    "description": "Total number of messages in the analysis window",
                    "example": 78
                  },
                  "unusualMessageVolume": {
                    "type": "boolean",
                    "description": "Whether message volume is unusual",
                    "example": false
                  },
                  "unusualMessageTimes": {
                    "type": "boolean",
                    "description": "Whether messages were sent at unusual times",
                    "example": false
                  },
                  "unusualMessageRecipients": {
                    "type": "boolean",
                    "description": "Whether messages were sent to unusual recipients",
                    "example": false
                  }
                }
              },
              "locationAnalysis": {
                "type": "object",
                "description": "Analysis of location patterns",
                "properties": {
                  "locationChanges": {
                    "type": "integer",
                    "description": "Number of significant location changes in the analysis window",
                    "example": 12
                  },
                  "unusualLocations": {
                    "type": "boolean",
                    "description": "Whether user visited unusual locations",
                    "example": true
                  },
                  "unusualTravelPatterns": {
                    "type": "boolean",
                    "description": "Whether user exhibited unusual travel patterns",
                    "example": true
                  },
                  "unusualTravelSpeed": {
                    "type": "boolean",
                    "description": "Whether user traveled at unusual speeds",
                    "example": false
                  }
                }
              }
            }
          },
          "aiImpersonationRisk": {
            "type": "object",
            "description": "Assessment of AI impersonation risk",
            "properties": {
              "riskLevel": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "description": "Level of AI impersonation risk",
                "example": "medium"
              },
              "riskScore": {
                "type": "number",
                "format": "float",
                "minimum": 0,
                "maximum": 1,
                "description": "Score indicating AI impersonation risk (0-1)",
                "example": 0.65
              },
              "indicators": {
                "type": "array",
                "description": "Indicators of potential AI impersonation",
                "items": {
                  "type": "string"
                },
                "example": ["unusual_call_pattern", "unusual_location"]
              }
            }
          },
          "recommendedActions": {
            "type": "array",
            "description": "Recommended actions to take",
            "items": {
              "type": "string"
            },
            "example": ["Verify user identity through additional authentication", "Monitor account activity for next 24 hours"]
          }
        }
      },
      "AnomaliesListResponse": {
        "type": "object",
        "required": ["anomalies"],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (if provided in request)",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier (if provided in request)",
            "example": "segment-123456"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the anomaly query",
            "example": "2025-04-19T16:30:00Z"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the anomaly query",
            "example": "2025-04-20T16:30:00Z"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of anomalies matching the query",
            "example": 5
          },
          "anomalies": {
            "type": "array",
            "description": "List of anomalies",
            "items": {
              "type": "object",
              "properties": {
                "anomalyId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the anomaly",
                  "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "type": {
                  "type": "string",
                  "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"],
                  "description": "Type of anomaly",
                  "example": "location"
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Severity of the anomaly",
                  "example": "medium"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the anomaly",
                  "example": "Unusual location activity detected outside typical travel patterns"
                },
                "detectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the anomaly was detected",
                  "example": "2025-04-20T15:45:00Z"
                },
                "status": {
                  "type": "string",
                  "enum": ["new", "acknowledged", "investigating", "resolved", "false_positive"],
                  "description": "Current status of the anomaly",
                  "example": "new"
                }
              }
            }
          },
          "severitySummary": {
            "type": "object",
            "description": "Summary of anomalies by severity",
            "properties": {
              "low": {
                "type": "integer",
                "description": "Count of low severity anomalies",
                "example": 2
              },
              "medium": {
                "type": "integer",
                "description": "Count of medium severity anomalies",
                "example": 2
              },
              "high": {
                "type": "integer",
                "description": "Count of high severity anomalies",
                "example": 1
              },
              "critical": {
                "type": "integer",
                "description": "Count of critical severity anomalies",
                "example": 0
              }
            }
          },
          "typeSummary": {
            "type": "object",
            "description": "Summary of anomalies by type",
            "properties": {
              "call_pattern": {
                "type": "integer",
                "description": "Count of call pattern anomalies",
                "example": 2
              },
              "message_pattern": {
                "type": "integer",
                "description": "Count of message pattern anomalies",
                "example": 0
              },
              "data_usage": {
                "type": "integer",
                "description": "Count of data usage anomalies",
                "example": 1
              },
              "location": {
                "type": "integer",
                "description": "Count of location anomalies",
                "example": 2
              },
              "device": {
                "type": "integer",
                "description": "Count of device anomalies",
                "example": 0
              }
            }
          }
        }
      },
      "AnomalyDetailsResponse": {
        "type": "object",
        "required": ["anomalyId", "type", "severity", "description", "detectedAt", "status"],
        "properties": {
          "anomalyId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the anomaly",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          },
          "type": {
            "type": "string",
            "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"],
            "description": "Type of anomaly",
            "example": "location"
          },
          "severity": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"],
            "description": "Severity of the anomaly",
            "example": "medium"
          },
          "description": {
            "type": "string",
            "description": "Description of the anomaly",
            "example": "Unusual location activity detected outside typical travel patterns"
          },
          "detectedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the anomaly was detected",
            "example": "2025-04-20T15:45:00Z"
          },
          "status": {
            "type": "string",
            "enum": ["new", "acknowledged", "investigating", "resolved", "false_positive"],
            "description": "Current status of the anomaly",
            "example": "new"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the anomaly was last updated",
            "example": "2025-04-20T15:45:00Z"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (partially masked)",
            "example": "+1202XXXX123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier",
            "example": "segment-123456"
          },
          "confidenceScore": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 1,
            "description": "Confidence score for the anomaly detection (0-1)",
            "example": 0.85
          },
          "details": {
            "type": "object",
            "description": "Detailed information about the anomaly",
            "properties": {
              "expectedBehavior": {
                "type": "string",
                "description": "Description of the expected behavior",
                "example": "User typically makes 5-10 calls per day to known contacts"
              },
              "observedBehavior": {
                "type": "string",
                "description": "Description of the observed behavior",
                "example": "User made 25 calls in a 2-hour period to previously unknown numbers"
              },
              "deviationMetrics": {
                "type": "object",
                "description": "Metrics quantifying the deviation from normal behavior",
                "properties": {
                  "volumeDeviation": {
                    "type": "number",
                    "description": "Deviation in volume (percentage)",
                    "example": 150
                  },
                  "patternDeviation": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Overall pattern deviation score (0-1)",
                    "example": 0.7
                  }
                }
              },
              "relatedAnomalies": {
                "type": "array",
                "description": "IDs of related anomalies",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": ["123e4567-e89b-12d3-a456-426614174002"]
              }
            }
          },
          "aiImpersonationRisk": {
            "type": "object",
            "description": "Assessment of AI impersonation risk",
            "properties": {
              "riskLevel": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "description": "Level of AI impersonation risk",
                "example": "medium"
              },
              "riskScore": {
                "type": "number",
                "format": "float",
                "minimum": 0,
                "maximum": 1,
                "description": "Score indicating AI impersonation risk (0-1)",
                "example": 0.65
              },
              "indicators": {
                "type": "array",
                "description": "Indicators of potential AI impersonation",
                "items": {
                  "type": "string"
                },
                "example": ["unusual_call_pattern", "unusual_location"]
              }
            }
          },
          "recommendedActions": {
            "type": "array",
            "description": "Recommended actions to take",
            "items": {
              "type": "string"
            },
            "example": ["Verify user identity through additional authentication", "Monitor account activity for next 24 hours"]
          },
          "notes": {
            "type": "array",
            "description": "Notes added to the anomaly",
            "items": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the note was added",
                  "example": "2025-04-20T16:00:00Z"
                },
                "author": {
                  "type": "string",
                  "description": "Author of the note",
                  "example": "system"
                },
                "content": {
                  "type": "string",
                  "description": "Content of the note",
                  "example": "Automated analysis suggests this may be due to a compromised device"
                }
              }
            }
          }
        }
      },
      "AnomalyStatusUpdateRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["acknowledged", "investigating", "resolved", "false_positive"],
            "description": "New status for the anomaly",
            "example": "acknowledged"
          },
          "note": {
            "type": "string",
            "description": "Note to add to the anomaly",
            "example": "User confirmed this was a legitimate business trip"
          }
        }
      },
      "MonitoringConfigRequest": {
        "type": "object",
        "oneOf": [
          {
            "required": ["phoneNumber", "consentToken"]
          },
          {
            "required": ["networkSegment", "consentToken"]
          }
        ],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier",
            "example": "segment-123456"
          },
          "consentToken": {
            "type": "string",
            "description": "Token representing user consent for network monitoring",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "monitoringTypes": {
            "type": "array",
            "description": "Types of network patterns to monitor",
            "items": {
              "type": "string",
              "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device", "all"]
            },
            "default": ["all"],
            "example": ["call_pattern", "message_pattern", "location"]
          },
          "sensitivityLevel": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "description": "Sensitivity level for anomaly detection",
            "default": "medium",
            "example": "medium"
          },
          "monitoringPeriod": {
            "type": "integer",
            "description": "Period in days for which to enable monitoring (0 for indefinite)",
            "minimum": 0,
            "maximum": 365,
            "default": 30,
            "example": 90
          },
          "baselineWindow": {
            "type": "integer",
            "description": "Time window in days to establish baseline behavior (7-90)",
            "minimum": 7,
            "maximum": 90,
            "default": 30,
            "example": 30
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to receive monitoring status updates",
            "example": "https://example.com/callbacks/monitoring"
          }
        }
      },
      "MonitoringConfigResponse": {
        "type": "object",
        "required": ["monitoringId", "status", "configuredAt"],
        "properties": {
          "monitoringId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the monitoring configuration",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": ["configuring", "active", "paused", "expired"],
            "description": "Current status of the monitoring configuration",
            "example": "configuring"
          },
          "configuredAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the monitoring was configured",
            "example": "2025-04-20T16:30:00Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the monitoring expires (null for indefinite)",
            "example": "2025-07-19T16:30:00Z"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (if provided in request)",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier (if provided in request)",
            "example": "segment-123456"
          },
          "monitoringTypes": {
            "type": "array",
            "description": "Types of network patterns being monitored",
            "items": {
              "type": "string",
              "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"]
            },
            "example": ["call_pattern", "message_pattern", "location"]
          },
          "sensitivityLevel": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "description": "Sensitivity level for anomaly detection",
            "example": "medium"
          },
          "baselineStatus": {
            "type": "string",
            "enum": ["collecting", "established", "updating"],
            "description": "Status of the baseline behavior collection",
            "example": "collecting"
          },
          "baselineCompletionEstimate": {
            "type": "string",
            "format": "date-time",
            "description": "Estimated time when baseline collection will complete",
            "example": "2025-05-20T16:30:00Z"
          }
        }
      },
      "MonitoringStatusResponse": {
        "type": "object",
        "required": ["monitoringId", "status"],
        "properties": {
          "monitoringId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the monitoring configuration",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": ["configuring", "active", "paused", "expired"],
            "description": "Current status of the monitoring configuration",
            "example": "active"
          },
          "configuredAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the monitoring was configured",
            "example": "2025-04-20T16:30:00Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the monitoring expires (null for indefinite)",
            "example": "2025-07-19T16:30:00Z"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (if provided in request)",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier (if provided in request)",
            "example": "segment-123456"
          },
          "monitoringTypes": {
            "type": "array",
            "description": "Types of network patterns being monitored",
            "items": {
              "type": "string",
              "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"]
            },
            "example": ["call_pattern", "message_pattern", "location"]
          },
          "sensitivityLevel": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "description": "Sensitivity level for anomaly detection",
            "example": "medium"
          },
          "baselineStatus": {
            "type": "string",
            "enum": ["collecting", "established", "updating"],
            "description": "Status of the baseline behavior collection",
            "example": "established"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the monitoring status was last updated",
            "example": "2025-04-20T17:30:00Z"
          },
          "anomalyStats": {
            "type": "object",
            "description": "Statistics about detected anomalies",
            "properties": {
              "totalAnomaliesDetected": {
                "type": "integer",
                "description": "Total number of anomalies detected",
                "example": 5
              },
              "lastAnomalyDetected": {
                "type": "string",
                "format": "date-time",
                "description": "Time when the last anomaly was detected",
                "example": "2025-04-20T15:45:00Z"
              },
              "anomaliesBySeverity": {
                "type": "object",
                "description": "Count of anomalies by severity level",
                "properties": {
                  "low": {
                    "type": "integer",
                    "description": "Count of low severity anomalies",
                    "example": 2
                  },
                  "medium": {
                    "type": "integer",
                    "description": "Count of medium severity anomalies",
                    "example": 2
                  },
                  "high": {
                    "type": "integer",
                    "description": "Count of high severity anomalies",
                    "example": 1
                  },
                  "critical": {
                    "type": "integer",
                    "description": "Count of critical severity anomalies",
                    "example": 0
                  }
                }
              }
            }
          },
          "aiImpersonationRisk": {
            "type": "object",
            "description": "Current assessment of AI impersonation risk",
            "properties": {
              "riskLevel": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "description": "Current level of AI impersonation risk",
                "example": "low"
              },
              "riskScore": {
                "type": "number",
                "format": "float",
                "minimum": 0,
                "maximum": 1,
                "description": "Score indicating AI impersonation risk (0-1)",
                "example": 0.2
              }
            }
          }
        }
      },
      "AlertConfigRequest": {
        "type": "object",
        "oneOf": [
          {
            "required": ["phoneNumber", "consentToken"]
          },
          {
            "required": ["networkSegment", "consentToken"]
          }
        ],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier",
            "example": "segment-123456"
          },
          "consentToken": {
            "type": "string",
            "description": "Token representing user consent for alert configuration",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "minSeverity": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"],
            "description": "Minimum severity level for alerts",
            "default": "medium",
            "example": "medium"
          },
          "alertTypes": {
            "type": "array",
            "description": "Types of anomalies to generate alerts for",
            "items": {
              "type": "string",
              "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device", "all"]
            },
            "default": ["all"],
            "example": ["call_pattern", "location"]
          },
          "notificationChannels": {
            "type": "array",
            "description": "Channels to use for alert notifications",
            "items": {
              "type": "object",
              "required": ["type"],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["email", "sms", "push", "webhook"],
                  "description": "Type of notification channel",
                  "example": "email"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination for the notification (email address, phone number, or webhook URL)",
                  "example": "user@example.com"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether this channel is enabled",
                  "default": true,
                  "example": true
                }
              }
            }
          },
          "throttling": {
            "type": "object",
            "description": "Alert throttling configuration",
            "properties": {
              "maxAlertsPerHour": {
                "type": "integer",
                "description": "Maximum number of alerts per hour",
                "minimum": 1,
                "maximum": 100,
                "default": 10,
                "example": 5
              },
              "minTimeBetweenAlerts": {
                "type": "integer",
                "description": "Minimum time in minutes between alerts",
                "minimum": 0,
                "maximum": 1440,
                "default": 15,
                "example": 30
              }
            }
          },
          "quietHours": {
            "type": "object",
            "description": "Quiet hours configuration",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Whether quiet hours are enabled",
                "default": false,
                "example": true
              },
              "startTime": {
                "type": "string",
                "description": "Start time for quiet hours (HH:MM in 24-hour format)",
                "example": "22:00"
              },
              "endTime": {
                "type": "string",
                "description": "End time for quiet hours (HH:MM in 24-hour format)",
                "example": "07:00"
              },
              "timezone": {
                "type": "string",
                "description": "Timezone for quiet hours",
                "example": "America/New_York"
              }
            }
          }
        }
      },
      "AlertConfigResponse": {
        "type": "object",
        "required": ["alertConfigId", "configuredAt"],
        "properties": {
          "alertConfigId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the alert configuration",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "configuredAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the alert configuration was created",
            "example": "2025-04-20T16:30:00Z"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (if provided in request)",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier (if provided in request)",
            "example": "segment-123456"
          },
          "minSeverity": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"],
            "description": "Minimum severity level for alerts",
            "example": "medium"
          },
          "alertTypes": {
            "type": "array",
            "description": "Types of anomalies that generate alerts",
            "items": {
              "type": "string",
              "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"]
            },
            "example": ["call_pattern", "location"]
          },
          "notificationChannels": {
            "type": "array",
            "description": "Configured notification channels",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["email", "sms", "push", "webhook"],
                  "description": "Type of notification channel",
                  "example": "email"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination for the notification (partially masked)",
                  "example": "us**@example.com"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether this channel is enabled",
                  "example": true
                }
              }
            }
          },
          "throttling": {
            "type": "object",
            "description": "Alert throttling configuration",
            "properties": {
              "maxAlertsPerHour": {
                "type": "integer",
                "description": "Maximum number of alerts per hour",
                "example": 5
              },
              "minTimeBetweenAlerts": {
                "type": "integer",
                "description": "Minimum time in minutes between alerts",
                "example": 30
              }
            }
          },
          "quietHours": {
            "type": "object",
            "description": "Quiet hours configuration",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Whether quiet hours are enabled",
                "example": true
              },
              "startTime": {
                "type": "string",
                "description": "Start time for quiet hours",
                "example": "22:00"
              },
              "endTime": {
                "type": "string",
                "description": "End time for quiet hours",
                "example": "07:00"
              },
              "timezone": {
                "type": "string",
                "description": "Timezone for quiet hours",
                "example": "America/New_York"
              }
            }
          }
        }
      },
      "AlertHistoryResponse": {
        "type": "object",
        "required": ["alerts"],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number in E.164 format (if provided in request)",
            "example": "+12025550123"
          },
          "networkSegment": {
            "type": "string",
            "description": "Network segment identifier (if provided in request)",
            "example": "segment-123456"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the alert history query",
            "example": "2025-04-19T16:30:00Z"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the alert history query",
            "example": "2025-04-20T16:30:00Z"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of alerts matching the query",
            "example": 8
          },
          "alerts": {
            "type": "array",
            "description": "List of alerts",
            "items": {
              "type": "object",
              "properties": {
                "alertId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the alert",
                  "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "anomalyId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the anomaly that triggered the alert",
                  "example": "123e4567-e89b-12d3-a456-426614174002"
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Severity of the alert",
                  "example": "medium"
                },
                "type": {
                  "type": "string",
                  "enum": ["call_pattern", "message_pattern", "data_usage", "location", "device"],
                  "description": "Type of anomaly that triggered the alert",
                  "example": "location"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the alert",
                  "example": "Unusual location activity detected outside typical travel patterns"
                },
                "generatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the alert was generated",
                  "example": "2025-04-20T15:45:00Z"
                },
                "notificationsSent": {
                  "type": "array",
                  "description": "Notifications sent for this alert",
                  "items": {
                    "type": "object",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "enum": ["email", "sms", "push", "webhook"],
                        "description": "Notification channel",
                        "example": "email"
                      },
                      "destination": {
                        "type": "string",
                        "description": "Destination for the notification (partially masked)",
                        "example": "us**@example.com"
                      },
                      "sentAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time when the notification was sent",
                        "example": "2025-04-20T15:46:00Z"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["sent", "delivered", "failed"],
                        "description": "Status of the notification",
                        "example": "delivered"
                      }
                    }
                  }
                }
              }
            }
          },
          "severitySummary": {
            "type": "object",
            "description": "Summary of alerts by severity",
            "properties": {
              "low": {
                "type": "integer",
                "description": "Count of low severity alerts",
                "example": 3
              },
              "medium": {
                "type": "integer",
                "description": "Count of medium severity alerts",
                "example": 4
              },
              "high": {
                "type": "integer",
                "description": "Count of high severity alerts",
                "example": 1
              },
              "critical": {
                "type": "integer",
                "description": "Count of critical severity alerts",
                "example": 0
              }
            }
          },
          "typeSummary": {
            "type": "object",
            "description": "Summary of alerts by type",
            "properties": {
              "call_pattern": {
                "type": "integer",
                "description": "Count of call pattern alerts",
                "example": 3
              },
              "message_pattern": {
                "type": "integer",
                "description": "Count of message pattern alerts",
                "example": 1
              },
              "data_usage": {
                "type": "integer",
                "description": "Count of data usage alerts",
                "example": 1
              },
              "location": {
                "type": "integer",
                "description": "Count of location alerts",
                "example": 3
              },
              "device": {
                "type": "integer",
                "description": "Count of device alerts",
                "example": 0
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "INVALID_PARAMETER"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "The provided phone number is invalid"
          },
          "details": {
            "type": "object",
            "description": "Additional error details",
            "example": {
              "parameter": "phoneNumber",
              "reason": "Must be in E.164 format"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
