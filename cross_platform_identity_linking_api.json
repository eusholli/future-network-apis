{
  "openapi": "3.0.0",
  "info": {
    "title": "Cross-Platform Identity Linking API",
    "description": "This API enables secure linking of user identities across different platforms and services using telecom network data as a trusted anchor.",
    "version": "1.0.0",
    "contact": {
      "name": "Telecom Network APIs Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "https://api.telecom-network.example.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://sandbox.telecom-network.example.com/v1",
      "description": "Sandbox server for testing"
    }
  ],
  "tags": [
    {
      "name": "identity",
      "description": "Identity operations"
    },
    {
      "name": "linking",
      "description": "Identity linking operations"
    },
    {
      "name": "verification",
      "description": "Verification operations"
    }
  ],
  "paths": {
    "/identity/link/initiate": {
      "post": {
        "tags": ["identity", "linking"],
        "summary": "Initiate identity linking",
        "description": "Initiates the process of linking a user's identity across platforms using telecom network data.",
        "operationId": "initiateIdentityLinking",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkInitiationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Linking process initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkInitiationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/identity/link/complete": {
      "post": {
        "tags": ["identity", "linking"],
        "summary": "Complete identity linking",
        "description": "Completes the process of linking a user's identity across platforms.",
        "operationId": "completeIdentityLinking",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkCompletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Linking process completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkCompletionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Linking request not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Identity already linked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/identity/link/{linkId}": {
      "get": {
        "tags": ["identity", "linking"],
        "summary": "Get identity link status",
        "description": "Retrieves the status of an identity linking process.",
        "operationId": "getIdentityLinkStatus",
        "parameters": [
          {
            "name": "linkId",
            "in": "path",
            "description": "ID of the identity link",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Link status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Link not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["identity", "linking"],
        "summary": "Delete identity link",
        "description": "Deletes an identity link between platforms.",
        "operationId": "deleteIdentityLink",
        "parameters": [
          {
            "name": "linkId",
            "in": "path",
            "description": "ID of the identity link",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Link deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Link not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/identity/links": {
      "get": {
        "tags": ["identity", "linking"],
        "summary": "List identity links",
        "description": "Lists all identity links for a user.",
        "operationId": "listIdentityLinks",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Phone number of the user in E.164 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consentToken",
            "in": "query",
            "description": "Token representing user consent for accessing identity links",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter links by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "active", "revoked", "expired"]
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Filter links by platform",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of links to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Links retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinksListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User has not provided consent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/identity/verify": {
      "post": {
        "tags": ["identity", "verification"],
        "summary": "Verify identity link",
        "description": "Verifies an identity link between platforms.",
        "operationId": "verifyIdentityLink",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Link not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LinkInitiationRequest": {
        "type": "object",
        "required": ["phoneNumber", "consentToken", "sourcePlatform", "targetPlatform", "sourceIdentifier"],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user in E.164 format",
            "example": "+12025550123"
          },
          "consentToken": {
            "type": "string",
            "description": "Token representing user consent for identity linking",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "sourcePlatform": {
            "type": "string",
            "description": "Name of the source platform",
            "example": "ExampleSocialNetwork"
          },
          "targetPlatform": {
            "type": "string",
            "description": "Name of the target platform",
            "example": "ExampleEcommerce"
          },
          "sourceIdentifier": {
            "type": "string",
            "description": "User identifier on the source platform",
            "example": "user123"
          },
          "targetIdentifier": {
            "type": "string",
            "description": "User identifier on the target platform (if known)",
            "example": "customer456"
          },
          "linkType": {
            "type": "string",
            "enum": ["one_time", "persistent"],
            "description": "Type of identity link to create",
            "default": "persistent",
            "example": "persistent"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Time in seconds until the link expires (0 for no expiration)",
            "default": 0,
            "example": 86400
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to receive link status updates",
            "example": "https://example.com/callbacks/identity-link"
          }
        }
      },
      "LinkInitiationResponse": {
        "type": "object",
        "required": ["linkId", "status", "verificationCode", "initiatedAt"],
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the identity link",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "active", "revoked", "expired"],
            "description": "Current status of the identity link",
            "example": "pending"
          },
          "verificationCode": {
            "type": "string",
            "description": "Verification code to be used in the target platform",
            "example": "ABCD-1234-EFGH-5678"
          },
          "initiatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the linking process was initiated",
            "example": "2025-04-20T16:30:00Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the verification code expires",
            "example": "2025-04-20T17:30:00Z"
          },
          "verificationUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL that can be used to complete the linking process",
            "example": "https://verify.telecom-network.example.com/identity/link/123e4567-e89b-12d3-a456-426614174000"
          },
          "qrCodeUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to a QR code that can be scanned to complete the linking process",
            "example": "https://verify.telecom-network.example.com/qr/identity/link/123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "LinkCompletionRequest": {
        "type": "object",
        "required": ["linkId", "verificationCode", "targetIdentifier"],
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the identity link",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "verificationCode": {
            "type": "string",
            "description": "Verification code provided during link initiation",
            "example": "ABCD-1234-EFGH-5678"
          },
          "targetIdentifier": {
            "type": "string",
            "description": "User identifier on the target platform",
            "example": "customer456"
          },
          "consentToken": {
            "type": "string",
            "description": "Token representing user consent for identity linking",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "LinkCompletionResponse": {
        "type": "object",
        "required": ["linkId", "status", "completedAt"],
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the identity link",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": ["active", "revoked", "expired"],
            "description": "Current status of the identity link",
            "example": "active"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the linking process was completed",
            "example": "2025-04-20T16:45:00Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the link expires (null for no expiration)",
            "example": "2025-04-21T16:45:00Z"
          },
          "linkToken": {
            "type": "string",
            "description": "Token that can be used to verify the identity link",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "sourcePlatform": {
            "type": "string",
            "description": "Name of the source platform",
            "example": "ExampleSocialNetwork"
          },
          "targetPlatform": {
            "type": "string",
            "description": "Name of the target platform",
            "example": "ExampleEcommerce"
          },
          "sourceIdentifier": {
            "type": "string",
            "description": "User identifier on the source platform (partially masked)",
            "example": "use****"
          },
          "targetIdentifier": {
            "type": "string",
            "description": "User identifier on the target platform (partially masked)",
            "example": "cus****"
          }
        }
      },
      "LinkStatusResponse": {
        "type": "object",
        "required": ["linkId", "status", "initiatedAt"],
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the identity link",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "active", "revoked", "expired"],
            "description": "Current status of the identity link",
            "example": "active"
          },
          "initiatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the linking process was initiated",
            "example": "2025-04-20T16:30:00Z"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the linking process was completed",
            "example": "2025-04-20T16:45:00Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the link expires (null for no expiration)",
            "example": "2025-04-21T16:45:00Z"
          },
          "lastVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the link was last verified",
            "example": "2025-04-20T17:30:00Z"
          },
          "verificationCount": {
            "type": "integer",
            "description": "Number of times the link has been verified",
            "example": 3
          },
          "sourcePlatform": {
            "type": "string",
            "description": "Name of the source platform",
            "example": "ExampleSocialNetwork"
          },
          "targetPlatform": {
            "type": "string",
            "description": "Name of the target platform",
            "example": "ExampleEcommerce"
          },
          "sourceIdentifier": {
            "type": "string",
            "description": "User identifier on the source platform (partially masked)",
            "example": "use****"
          },
          "targetIdentifier": {
            "type": "string",
            "description": "User identifier on the target platform (partially masked)",
            "example": "cus****"
          },
          "linkType": {
            "type": "string",
            "enum": ["one_time", "persistent"],
            "description": "Type of identity link",
            "example": "persistent"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user (partially masked)",
            "example": "+1202XXXX123"
          }
        }
      },
      "LinksListResponse": {
        "type": "object",
        "required": ["phoneNumber", "links"],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user in E.164 format",
            "example": "+12025550123"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of links for the user",
            "example": 5
          },
          "links": {
            "type": "array",
            "description": "List of identity links",
            "items": {
              "type": "object",
              "properties": {
                "linkId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the identity link",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "active", "revoked", "expired"],
                  "description": "Current status of the identity link",
                  "example": "active"
                },
                "sourcePlatform": {
                  "type": "string",
                  "description": "Name of the source platform",
                  "example": "ExampleSocialNetwork"
                },
                "targetPlatform": {
                  "type": "string",
                  "description": "Name of the target platform",
                  "example": "ExampleEcommerce"
                },
                "initiatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the linking process was initiated",
                  "example": "2025-04-20T16:30:00Z"
                },
                "completedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the linking process was completed",
                  "example": "2025-04-20T16:45:00Z"
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the link expires (null for no expiration)",
                  "example": "2025-04-21T16:45:00Z"
                },
                "linkType": {
                  "type": "string",
                  "enum": ["one_time", "persistent"],
                  "description": "Type of identity link",
                  "example": "persistent"
                }
              }
            }
          },
          "platformSummary": {
            "type": "array",
            "description": "Summary of links by platform",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "description": "Name of the platform",
                  "example": "ExampleSocialNetwork"
                },
                "linkCount": {
                  "type": "integer",
                  "description": "Number of links for this platform",
                  "example": 2
                },
                "activeCount": {
                  "type": "integer",
                  "description": "Number of active links for this platform",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "LinkVerificationRequest": {
        "type": "object",
        "oneOf": [
          {
            "required": ["linkId"]
          },
          {
            "required": ["linkToken"]
          },
          {
            "required": ["sourcePlatform", "targetPlatform", "sourceIdentifier", "targetIdentifier"]
          }
        ],
        "properties": {
          "linkId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the identity link",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "linkToken": {
            "type": "string",
            "description": "Token representing the identity link",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "sourcePlatform": {
            "type": "string",
            "description": "Name of the source platform",
            "example": "ExampleSocialNetwork"
          },
          "targetPlatform": {
            "type": "string",
            "description": "Name of the target platform",
            "example": "ExampleEcommerce"
          },
          "sourceIdentifier": {
            "type": "string",
            "description": "User identifier on the source platform",
            "example": "user123"
          },
          "targetIdentifier": {
            "type": "string",
            "description": "User identifier on the target platform",
            "example": "customer456"
          }
        }
      },
      "LinkVerificationResponse": {
        "type": "object",
        "required": ["verified", "linkId", "status"],
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "Whether the identity link was verified successfully",
            "example": true
          },
          "linkId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the identity link",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": ["active", "revoked", "expired"],
            "description": "Current status of the identity link",
            "example": "active"
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the verification was performed",
            "example": "2025-04-20T17:30:00Z"
          },
          "sourcePlatform": {
            "type": "string",
            "description": "Name of the source platform",
            "example": "ExampleSocialNetwork"
          },
          "targetPlatform": {
            "type": "string",
            "description": "Name of the target platform",
            "example": "ExampleEcommerce"
          },
          "sourceIdentifier": {
            "type": "string",
            "description": "User identifier on the source platform (partially masked)",
            "example": "use****"
          },
          "targetIdentifier": {
            "type": "string",
            "description": "User identifier on the target platform (partially masked)",
            "example": "cus****"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the link expires (null for no expiration)",
            "example": "2025-04-21T16:45:00Z"
          },
          "confidenceScore": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 1,
            "description": "Confidence score for the identity link (0-1)",
            "example": 0.95
          },
          "verificationDetails": {
            "type": "object",
            "description": "Additional details about the verification",
            "properties": {
              "telecomVerified": {
                "type": "boolean",
                "description": "Whether the link was verified by telecom network data",
                "example": true
              },
              "lastActivityMatch": {
                "type": "boolean",
                "description": "Whether recent activity patterns match across platforms",
                "example": true
              },
              "locationConsistency": {
                "type": "boolean",
                "description": "Whether location data is consistent across platforms",
                "example": true
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "INVALID_PARAMETER"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "The provided phone number is invalid"
          },
          "details": {
            "type": "object",
            "description": "Additional error details",
            "example": {
              "parameter": "phoneNumber",
              "reason": "Must be in E.164 format"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
